// <auto-generated />
using System;
using GardenApp.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GardenApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250110185217_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GardenApp.Models.PlantInfoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CommonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LatinName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LifeCycle")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlantInfo");
                });

            modelBuilder.Entity("GardenApp.Models.PlantStartModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ActualIndoorStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GerminationRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsPreferredMethod")
                        .HasColumnType("bit");

                    b.Property<string>("Issues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuesFixes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecommendedIndoorStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeedlingEnvironment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlantStart");
                });

            modelBuilder.Entity("GardenApp.Models.PlantSuccessModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActualPlantingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HowToWinterize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPreferredMethod")
                        .HasColumnType("bit");

                    b.Property<string>("IssuesFixes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherIssues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PestsEncountered")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<int>("RecommendedLowerTemp")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecommendedTransplantDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecommendedUpperTemp")
                        .HasColumnType("int");

                    b.Property<bool>("StartedFromSeedOutdoors")
                        .HasColumnType("bit");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlantSuccess");
                });

            modelBuilder.Entity("GardenApp.Models.YearModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Year");
                });
#pragma warning restore 612, 618
        }
    }
}
